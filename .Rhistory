setwd("C:/Users/Alyssa/Box Sync/Programming Projects/IMLS Data/Registered-Borrower-Visits/2012")
#load data
setwd("C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits/2012")
states <- read.csv("states2012.csv")
hhhd(states)
head(states)
View(states)
View(states)
View(states)
states$region = states$STABR
states$value = states$VISITS
states$value
#Already downloaded all zip files for csv from this site: http://imls.gov/research-evaluation/data-collection/public-libraries-united-states-survey/public-libraries-united
update.packages()
if("data.table" %in% rownames(installed.packages()) == FALSE) {install.packages("data.table", dependencies = TRUE)}
#Trying a script to go through all of the years of PLS files
#Compute per regbor visits then append it to end of data frame with column name of year
#Get column name from the file name? 2006 is the first year to include this?
library(choroplethr)
library(data.table)
update.packages()
#Each year is currently stored in its own folder. Each folder has three files.
#Goes through the directory and creates a vector of the file names I want to use
filenames = dir(pattern="*pusum*", ignore.case=TRUE, recursive = TRUE, include.dirs=TRUE, full.names = TRUE)
#Go through each file
i <- 0
for (i in 1:length(filenames)){
temp <- read.csv(filenames[i])
i <- i + 1
#Look to see if there is even a Registered Borrower (REGBOR) variable in the dataset
if("REGBOR" %in% colnames(temp))
{
cat("Yes")
#Create a new column that does Visits per Registered Borrower
temp$regborvisits <- 0
temp$regborvisits <- temp$VISITS / temp$REGBOR
temp <- as.data.table(temp)
#Save only regborvisits and the correlating state to a new data frame
temp1 <- temp[,VISITS/REGBOR, by=STABR]
} else {
#Don't even bother with the years that didn't track registered borrowers (pre-2006)
cat("No")
}
}
setwd("C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits/Data")
filenames = dir(pattern="*pusum*", ignore.case=TRUE, recursive = TRUE, include.dirs=TRUE, full.names = TRUE)
i <- 0
for (i in 1:length(filenames)){
temp <- read.csv(filenames[i])
i <- i + 1
#Look to see if there is even a Registered Borrower (REGBOR) variable in the dataset
if("REGBOR" %in% colnames(temp))
{
cat("Yes")
#Create a new column that does Visits per Registered Borrower
temp$regborvisits <- 0
temp$regborvisits <- temp$VISITS / temp$REGBOR
temp <- as.data.table(temp)
#Save only regborvisits and the correlating state to a new data frame
temp1 <- temp[,VISITS/REGBOR, by=STABR]
} else {
#Don't even bother with the years that didn't track registered borrowers (pre-2006)
cat("No")
}
}
View(temp1)
head(temp1)
?save
filenames
nrow(temp)
nrow(temm1)
nrow(temp1)
l = list()
#Go through each file
i <- 0
for (i in 1:length(filenames)){
temp <- read.csv(filenames[i])
i <- i + 1
#Look to see if there is even a Registered Borrower (REGBOR) variable in the dataset
if("REGBOR" %in% colnames(temp))
{
print(filenames[i])
#Create a new column that does Visits per Registered Borrower
temp$regborvisits <- 0
temp$regborvisits <- temp$VISITS / temp$REGBOR
#temp <- as.data.table(temp)
#Save only regborvisits and the correlating state to a new data frame
#temp1 <- temp[,regborvisits, by=STABR]
l[[filenames[i]]] = temp
}
}
head(l)
l = list()
#Go through each file
i <- 0
for (i in 1:length(filenames)){
temp <- read.csv(filenames[i])
i <- i + 1
#Look to see if there is even a Registered Borrower (REGBOR) variable in the dataset
if("REGBOR" %in% colnames(temp))
{
print(filenames[i])
#Create a new column that does Visits per Registered Borrower
temp$regborvisits <- 0
temp$regborvisits <- temp$VISITS / temp$REGBOR
#temp <- as.data.table(temp)
#Save only regborvisits and the correlating state to a new data frame
#temp1 <- temp[,regborvisits, by=STABR]
temp=temp[,c("STABR","regborvisits")]
l[[filenames[i]]] = temp
}
}
head(l)
l[[`./pupld09a_csv/pusum09a.csv`]]$STABR
l[[1]]$STABR
names(l)
df = data.frame()
df$region = l[[1]]$STABR
df$'2007' = l[[1]]$regborvisits
df$'2008' = l[[2]]$regborvisits
df$'2009' = l[[3]]$regborvisits
df$'2010' = l[[4]]$regborvisits
df$'2011' = l[[5]]$regborvisits
df$'2012' = l[[6]]$regborvisits
df$'2013' = l[[7]]$regborvisits
df = data.frame(region=l[[1]]$STABR)
#df$region = l[[1]]$STABR
df$'2007' = l[[1]]$regborvisits
df$'2008' = l[[2]]$regborvisits
df$'2009' = l[[3]]$regborvisits
df$'2010' = l[[4]]$regborvisits
df$'2011' = l[[5]]$regborvisits
df$'2012' = l[[6]]$regborvisits
df$'2013' = l[[7]]$regborvisits
nrow(df)
getwd()
df_all_data=df
save(df_all_data,file="all_data.rdata")
rm(df_all_data)
data(df_all_data)
?data
?load
load("all_data.rdata")
View(df_all_data)
setwd("C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits/Data")
filenames = dir(pattern="*pusum*", ignore.case=TRUE, recursive = TRUE, include.dirs=TRUE, full.names = TRUE)
l = list()
#Go through each file
i <- 0
for (i in 1:length(filenames)){
temp <- read.csv(filenames[i])
i <- i + 1
#Look to see if there is even a Registered Borrower (REGBOR) variable in the dataset
if("REGBOR" %in% colnames(temp))
{
print(filenames[i])
#Create a new column that does Visits per Registered Borrower
temp$regborvisits <- 0
temp$regborvisits <- temp$VISITS / temp$REGBOR
#temp <- as.data.table(temp)
#Save only regborvisits and the correlating state to a new data frame
#temp1 <- temp[,regborvisits, by=STABR]
temp=temp[,c("STABR","regborvisits")]
l[[filenames[i]]] = temp
}
}
df = data.frame(region=l[[1]]$STABR)
#df$region = l[[1]]$STABR
df$'2007' = l[[1]]$regborvisits
df$'2008' = l[[2]]$regborvisits
df$'2009' = l[[3]]$regborvisits
df$'2010' = l[[4]]$regborvisits
df$'2011' = l[[5]]$regborvisits
df$'2012' = l[[6]]$regborvisits
df$'2013' = l[[7]]$regborvisits
nrow(df)
df_all_data=df
getwd()
save(df_all_data,file="all_data.rdata")
rm(df_all_data)
(df_all_data)
?data
load("all_data.rdata")
View(df_all_data)
View(df_all_data)
l = list()
#Go through each file
i <- 0
for (i in length(filenames):1){
temp <- read.csv(filenames[i])
i <- i + 1
#Look to see if there is even a Registered Borrower (REGBOR) variable in the dataset
if("REGBOR" %in% colnames(temp))
{
print(filenames[i])
#Create a new column that does Visits per Registered Borrower
temp$regborvisits <- 0
temp$regborvisits <- temp$VISITS / temp$REGBOR
#temp <- as.data.table(temp)
#Save only regborvisits and the correlating state to a new data frame
#temp1 <- temp[,regborvisits, by=STABR]
temp=temp[,c("STABR","regborvisits")]
l[[filenames[i]]] = temp
}
}
df = data.frame(region=l[[1]]$STABR)
#df$region = l[[1]]$STABR
df$'2007' = l[[1]]$regborvisits
df$'2008' = l[[2]]$regborvisits
df$'2009' = l[[3]]$regborvisits
df$'2010' = l[[4]]$regborvisits
df$'2011' = l[[5]]$regborvisits
df$'2012' = l[[6]]$regborvisits
df$'2013' = l[[7]]$regborvisits
nrow(df)
df_all_data=df
getwd()
save(df_all_data,file="all_data.rdata")
rm(df_all_data)
(df_all_data)
?data
load("all_data.rdata")
#Already downloaded all zip files for csv from this site: http://imls.gov/research-evaluation/data-collection/public-libraries-united-states-survey/public-libraries-united
update.packages()
if("data.table" %in% rownames(installed.packages()) == FALSE) {install.packages("data.table", dependencies = TRUE)}
#Trying a script to go through all of the years of PLS files
#Compute per regbor visits then append it to end of data frame with column name of year
library(choroplethr)
library(data.table)
update.packages()
#Each year is currently stored in its own folder. Each folder has three files.
#Goes through the directory and creates a vector of the file names I want to use
filenames = dir(pattern="*pusum*", ignore.case=TRUE, recursive = TRUE, include.dirs=TRUE, full.names = TRUE)
l = list()
#Go through each file
i <- 0
for (i in 1:length(filenames)){
temp <- read.csv(filenames[i])
i <- i + 1
#Look to see if there is even a Registered Borrower (REGBOR) variable in the dataset
if("REGBOR" %in% colnames(temp))
{
print(filenames[i])
#Create a new column that does Visits per Registered Borrower
temp$regborvisits <- 0
temp$regborvisits <- temp$VISITS / temp$REGBOR
#temp <- as.data.table(temp)
#Save only regborvisits and the correlating state to a new data frame
#temp1 <- temp[,regborvisits, by=STABR]
temp=temp[,c("STABR","regborvisits")]
l[[filenames[i]]] = temp
}
}
df = data.frame(region=l[[1]]$STABR)
#df$region = l[[1]]$STABR
df$'2007' = l[[1]]$regborvisits
df$'2008' = l[[2]]$regborvisits
df$'2009' = l[[3]]$regborvisits
df$'2010' = l[[4]]$regborvisits
df$'2011' = l[[5]]$regborvisits
df$'2012' = l[[6]]$regborvisits
df$'2013' = l[[7]]$regborvisits
nrow(df)
df_all_data=df
getwd()
save(df_all_data,file="all_data.rdata")
rm(df_all_data)
(df_all_data)
?data
load("all_data.rdata")
temp$STABR <- tolower(temp.name[match(temp$STABR,state.abb)])
library(choroplethrMaps)
temp$STABR <- tolower(temp.name[match(temp$STABR,state.abb)])
temp$STABR <- tolower(state.name[match(temp$STABR,state.abb)])
View(temp)
states <- na.omit(states)
temp$STABR[8] <- "district of columbia"
temp <- na.omit(temp)
#Already downloaded all zip files for csv from this site: http://imls.gov/research-evaluation/data-collection/public-libraries-united-states-survey/public-libraries-united
update.packages()
if("data.table" %in% rownames(installed.packages()) == FALSE) {install.packages("data.table", dependencies = TRUE)}
#Trying a script to go through all of the years of PLS files
#Compute per regbor visits then append it to end of data frame with column name of year
library(choroplethr)
library(data.table)
library(choroplethrMaps)
update.packages()
#Each year is currently stored in its own folder. Each folder has three files.
#Goes through the directory and creates a vector of the file names I want to use
filenames = dir(pattern="*pusum*", ignore.case=TRUE, recursive = TRUE, include.dirs=TRUE, full.names = TRUE)
l = list()
#Go through each file
i <- 0
for (i in 1:length(filenames)){
temp <- read.csv(filenames[i])
i <- i + 1
#Look to see if there is even a Registered Borrower (REGBOR) variable in the dataset
if("REGBOR" %in% colnames(temp))
{
print(filenames[i])
#Create a new column that does Visits per Registered Borrower
temp$regborvisits <- 0
temp$regborvisits <- temp$VISITS / temp$REGBOR
#change state abbreviations to lower case, spelled out states
temp$STABR <- tolower(state.name[match(temp$STABR,state.abb)])
#Choroplethr is expecting Washington, DC so I make sure that is included
temp$STABR[8] <- "district of columbia"
#Removing all of the remaining US territories from the data frame, since choroplethr doesn't accept them. Storing the result as a new dataframe.
temp <- na.omit(temp)
#temp <- as.data.table(temp)
#Save only regborvisits and the correlating state to a new data frame
#temp1 <- temp[,regborvisits, by=STABR]
temp=temp[,c("STABR","regborvisits")]
l[[filenames[i]]] = temp
}
}
df = data.frame(region=l[[1]]$STABR)
#df$region = l[[1]]$STABR
df$'2007' = l[[1]]$regborvisits
df$'2008' = l[[2]]$regborvisits
df$'2009' = l[[3]]$regborvisits
df$'2010' = l[[4]]$regborvisits
df$'2011' = l[[5]]$regborvisits
df$'2012' = l[[6]]$regborvisits
df$'2013' = l[[7]]$regborvisits
nrow(df)
df_all_data=df
getwd()
save(df_all_data,file="all_data.rdata")
rm(df_all_data)
(df_all_data)
?data
load("all_data.rdata")
View(df)
df
nrow(df)
save(df_all_data,file="all_data.rdata")
rm(df_all_data)
load("all_data.rdata")
source('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits/Data/allyears.R')
View(df_all_data)
source('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits/Data/allyears.R')
source('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits/Data/allyears.R')
shiny::runApp('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits')
shiny::runApp('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits')
setwd("C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits")
load("all_data.rdata")
getwd()
setwd("C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits")
setwd("C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits/Data")
load("all_data.rdata")
shiny::runApp('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits')
getwd()
load("all_data.rdata")
df_all_data = all_data.rdata
df_all_data = "all_data.rdata"
df_all_data = load("all_data.rdata")
df_all_data = load(all_data.rdata)
ls()
getwd()
load("all_data.rdata")
df = df_all_data
typeof(df)
typeof(df_all_data)
shiny::runApp('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits')
load("all_data.rdata")
df=df_all_data
shiny::runApp('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits')
shiny::runApp('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits')
shiny::runApp('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits')
View(df_all_data)
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='alyssahislop', token='7084D80D6E8C6AF24F2EEC8F984C21E0', secret='9wyzpAj4u4+H1uJzTHsHuawi9KnNl1tXJMTv2TLg')
deployApp()
shiny::runApp('C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits')
install.packages("MASS")
install.packages("MASS")
install.packages(nnet)
install.packages(foreign)
install.packages("foreign")
install.packages("nnet")
setwd("C:/Users/Alyssa/Box Sync/Programming Projects/IMLSdata/Registered-Borrower-Visits")
load("/Data/all_data")
load("./Data/all_data")
load("~/Data/all_data")
load("Data/all_data")
load("Data/all_data.rdata")
shiny::runApp()
load("Data/all_data.rdata")
data(df_all_data, package="choroplethr")
data(all_data, package="choroplethr")
data("all_data"), package="choroplethr")
data("all_data", package="choroplethr")
data("df_all_data", package="choroplethr")
?data
getwd()
ls()
df
ls()
df_all_data
getwd()
load("Data/all_data.rdata")
ls()
df
ls()
df_all_data
typeof(df_all_data)
colnames(df_all_data)
shiny::runApp()
?data
?data
?data
?data
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
load.packages(rdrop)
load.packages("rdrop")
